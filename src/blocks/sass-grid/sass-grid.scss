// Variables
// ---------------------------
$default-grid-columns: 12 !default;
$default-grid-gutter: 1rem !default;

// Add additional sizes if necessary, highly recommended you change this to be
// tailored to your breakpoints, that match the design.
$default-grid-map: (
	'xs': 480px,
	'sm': 640px,
	'md': 800px,
	'lg': 960px,
	'xl': 1020px,
	'xxl': 1180px
) !default;
$default-grid-font-size-normal: 1rem !default;

// Grid container
// ---------------------------
@mixin grid-container($grid-gutter: $default-grid-gutter) {
	.grid {
		display: block;
		padding: 0;
		margin: 0;
		text-align: left;
		font-size: 0;
		line-height: 0}

	.grid--with-gutter {
		margin: 0 #{-$grid-gutter}; }

	.grid--center {
		text-align: center; }

	.grid--right {
		text-align: right; }

	.grid--middle {
		vertical-align: middle; }

	.grid--justify {
		text-align: justify; }
	.grid--justify:after {
		content: '';
		display: inline-block;
		width: 100%;
	}

}

// Grid cell
// ---------------------------
@mixin grid-cell-font-size($grid-map: $default-grid-map) {
	font-size: $default-grid-font-size-normal; }

@mixin grid-cell(
	$grid-gutter: $default-grid-gutter,
	$grid-map: $default-grid-map
) {
	.grid__cell {
		display: inline-block;
		margin: 0;
		padding: 0;
		text-align: left;
		vertical-align: top;
		line-height: 1;
		width: 100%;

		@include grid-cell-font-size($grid-map); }

	.grid--with-gutter > .grid__cell {
		padding: 0 $grid-gutter; } }


// Grid widths
// ---------------------------
@mixin grid-width-default(
	$grid-columns	: $default-grid-columns,
	$grid-map			: $default-grid-map
) {
	$column-increment: 1;

	@for $column-increment from 1 through $grid-columns {
		.grid__cell--#{$column-increment} {
			$w: (100% / $grid-columns) * $column-increment;
			width: $w; } } }

@mixin grid-width(
	$grid-columns	: $default-grid-columns,
	$grid-map			: $default-grid-map
) {
	$column-increment: 1;

	@each $breakpoint, $width in $grid-map {
		$class: unquote(".grid__cell--#{$breakpoint}");

		@media (min-width: $width) {
			@for $column-increment from 1 through $grid-columns {
				#{$class}-#{$column-increment} {
					$w: (100% / $grid-columns) * $column-increment;
					width: $w; } } } } }

// Simple grid using
// display: inline-block
// ---------------------------
@mixin grid(
	$grid-columns	: $default-grid-columns,
	$grid-gutter	: $default-grid-gutter,
	$grid-map			: $default-grid-map
) {
	@include grid-container($grid-gutter);
	@include grid-cell($grid-gutter, $grid-map);
	@include grid-width-default($grid-columns, $grid-map);
	@include grid-width($grid-columns, $grid-map); }

@include grid;
